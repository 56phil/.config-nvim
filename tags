!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/prh/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
buf_set_keymap	init.lua	/^    local function buf_set_keymap(...) vim.api.nvim_buf_set_keymap(bufnr, ...) end$/;"	f
buf_set_option	init.lua	/^    local function buf_set_option(...) vim.api.nvim_buf_set_option(bufnr, ...) end$/;"	f
config	init.lua	/^        config = function()$/;"	f
config	init.lua	/^    config = function ()$/;"	f
error_msg	plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
expand	init.lua	/^                expand = function(args)$/;"	f
expand	init.lua	/^        expand = function(args)$/;"	f
fn	init.lua	/^local fn = vim.fn    -- to call Vim functions e.g. fn.bufnr()$/;"	f
getCurrentDirectory	init.lua	/^local function getCurrentDirectory()$/;"	f
map	init.lua	/^local function map(mode, lhs, rhs, opts)$/;"	f
on_attach	init.lua	/^local on_attach = function(client, bufnr)$/;"	f
save_profiles	plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start) end$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start)$/;"	f
try_loadstring	plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
